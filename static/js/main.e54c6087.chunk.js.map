{"version":3,"sources":["actions/Register/action.js","components/Modal.js","components/Loader.js","components/Register/Register.js","actions/error.js","Config.js","components/Login/Login.js","components/Home/Banner.js","firebaseConfig.js","actions/Feed.js","components/Feeds/index.js","components/Home/Home.js","components/DialogBox.js","actions/AddExp.js","components/Profile/Profile.js","actions/Login/action.js","components/Nav/Nav.js","App.js","serviceWorker.js","reducers/ErrorReducer.js","reducers/RegisterReducer.js","reducers/LoginReducer.js","reducers/AddExpReducer.js","reducers/FeedReducer.js","reducers/index.js","reducers/store.js","Root.js","index.js"],"names":["DialogTitle","withStyles","theme","root","margin","padding","spacing","color","closeButton","position","right","top","palette","grey","props","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","DialogContent","MuiDialogContent","CustomizedDialogs","MuiDialogActions","title","message","initialState","redirectUri","history","React","useState","open","setOpen","handleClose","push","Dialog","aria-labelledby","id","dividers","gutterBottom","useStyles","makeStyles","backdrop","zIndex","drawer","Loader","showLoading","Backdrop","CircularProgress","withRouter","connect","state","errorHandler","registrationSuccess","RegisterUser","username","email","password","callBack","dispatch","console","log","type","axios","post","url","then","response","status","data","isSuccess","payload","error","catch","ClearError","useEffect","setUsername","setPassword","setEmail","setLoading","to","showErrorModal","errorMessage","onSubmit","ev","preventDefault","required","placeholder","maxLength","minLength","value","onChange","e","target","disabled","clientId","issuer","scopes","pkce","LoginPage","config","widget","OktaSignIn","baseUrl","split","logo","i18n","en","authParams","display","responseMode","renderEl","el","err","remove","Banner","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Feeds","jokes","html","slice","forEach","j","random","Math","floor","length","joke","Home","handleAddComment","OnClose","exptext","setText","TextField","multiline","rows","defaultValue","DialogActions","Button","this","FetchFeed","feedInfo","failure","feed","Component","Feed","showCommentBox","ExpReducer","database","ref","on","snapshot","res","dispatchPostResponse","val","ShowAddExpSection","show","Profile","useOktaAuth","authState","authService","userInfo","setUserInfo","isAuthenticated","getUser","info","LoggedInView","currentUser","onLogutClick","style","flexDirection","LoggedOutView","Nav","useHistory","logout","a","SetAuthentication","LoginReducer","token","Logout","onAuthRequired","path","exact","component","Register","Login","LoginCallback","Boolean","window","location","hostname","match","combineReducers","action","JSON","parse","localStorage","getItem","middleware","thunk","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","reducers","subscribe","persist","getState","setItem","stringify","Root","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e54c6087.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst url = \"https://localhost:5001\";\r\n\r\nfunction dispatchPostResponse() {\r\n  return {\r\n    type: \"REGISTER_SUCCESS\",\r\n    payload: \"Registration Completed Successfully\",\r\n  };\r\n}\r\n\r\nexport const RegisterUser = (username, email, password, callBack) => (\r\n  dispatch\r\n) => {\r\n  console.log(username);\r\n  dispatch({\r\n    type: \"CLEAR_ERROR\",\r\n  });\r\n  axios\r\n    .post(url + \"/Register\", { username, email, password })\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        callBack();\r\n        if (response.data.isSuccess)\r\n          return dispatch(dispatchPostResponse());\r\n        else {\r\n          dispatch({\r\n            type: \"HTTP_ERROR\",\r\n            payload: response.data.error,\r\n          });\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"n/W error\",error);\r\n      callBack();\r\n      dispatchPostResponse();\r\n      // dispatch({\r\n      //   type: \"HTTP_ERROR\",\r\n      //   payload:\r\n      //     \"Sorry 😞 Error occured while processing your request .Please try again after some time .\",\r\n      // });\r\n    });\r\n};\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    color:\"red\"\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nconst   CustomizedDialogs = ({title,message,initialState,redirectUri,history})=> {\r\n  const [open, setOpen] = React.useState(initialState);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    if(redirectUri){\r\n     history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog  onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         {title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography  gutterBottom className=\"error\">\r\n           {message}\r\n          </Typography>\r\n          \r\n        </DialogContent>\r\n       \r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\nexport default CustomizedDialogs;","import React from \"react\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst Loader = ({ showLoading }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(showLoading);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n};\r\nexport default Loader;\r\n","import React, { useState,useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RegisterUser } from \"../../actions/Register/action\";\r\nimport {ClearError} from '../../actions/error';\r\nimport { connect } from \"react-redux\";\r\nimport CustomizedDialogs from \"../Modal\";\r\nimport Loader from '../Loader';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst Register = (props) => {\r\n  useEffect( () => {\r\n    props.ClearError();\r\n  }, [])\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const  [showLoading, setLoading] = useState(false);\r\n\r\n\r\n  const handleSubmit = (ev) => {\r\n      setLoading(true); \r\n    props.RegisterUser(username, email, password ,()=>setLoading(false));\r\n    ev.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"Reg-page\">\r\n      <div className=\"container page\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\r\n            <h1 className=\"text-xs-center\">Sign Up</h1>\r\n            <p className=\"text-xs-center\">\r\n              <Link to=\"/login\" className=\"link_text\">Have an account?</Link>\r\n            </p>\r\n             {showLoading?<Loader showLoading={true}/>:\"\"}\r\n            {/* <ListErrors errors={this.props.errors} /> */}\r\n            {props.errorHandler && props.errorHandler.showErrorModal ? (\r\n              <CustomizedDialogs\r\n                title=\"Error\"\r\n                message={props.errorHandler.errorMessage}\r\n                initialState={true}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {props.registrationSuccess ? (\r\n              <CustomizedDialogs\r\n                title=\"Success\"\r\n                message={\"Welcome to the club 😊 .Please sign in to enjoy the experience ride\"}\r\n                initialState={true}  redirectUri = {\"/login\"} history ={props.history}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <form onSubmit={handleSubmit}>\r\n              <fieldset>\r\n                <fieldset className=\"form-group\">\r\n                  <input\r\n                    className=\"form-control form-control-lg\"\r\n                    type=\"text\"\r\n                    required\r\n                    placeholder=\"Username\"\r\n                    maxLength={50}\r\n                    minLength={4}\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n\r\n                <fieldset className=\"form-group\">\r\n                  <input\r\n                    className=\"form-control form-control-lg\"\r\n                    type=\"email\"\r\n                    required\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n\r\n                <fieldset className=\"form-group\">\r\n                  <input\r\n                    className=\"form-control form-control-lg\"\r\n                    type=\"password\"\r\n                    required\r\n                    minLength={5}\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n\r\n                <button\r\n                  className=\"btn btn-lg btn-primary pull-xs-right\"\r\n                  type=\"submit\"\r\n                  disabled={false}\r\n                >\r\n                  Sign up\r\n                </button>\r\n              </fieldset>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  errorHandler: state.errorHandler,\r\n  registrationSuccess : state.registrationSuccess.registrationSuccess\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { RegisterUser ,ClearError})(Register));\r\n","export const ClearError = ()=>({\r\n    type :\"CLEAR_ERROR\"\r\n});\r\n\r\n","export default {\r\n    oidc: {\r\n      clientId: '0oaw9f9ohZAWMdx5l4x6',\r\n      issuer: 'https://dev-443037.okta.com/oauth2/default',\r\n      redirectUri: 'http://localhost:3000/callback',\r\n      scopes: ['openid', 'profile', 'email'],\r\n      pkce: true\r\n    }\r\n  }","import React, { useEffect } from \"react\";\r\nimport * as OktaSignIn from \"@okta/okta-signin-widget\";\r\nimport \"@okta/okta-signin-widget/dist/css/okta-sign-in.min.css\";\r\n\r\nimport config from \"../../Config\";\r\n\r\nconst LoginPage = () => {\r\n  useEffect(() => {\r\n    const { pkce, issuer, clientId, redirectUri, scopes } = config.oidc;\r\n    const widget = new OktaSignIn({\r\n      /**\r\n       * Note: when using the Sign-In Widget for an OIDC flow, it still\r\n       * needs to be configured with the base URL for your Okta Org. Here\r\n       * we derive it from the given issuer for convenience.\r\n       */\r\n      baseUrl: issuer.split(\"/oauth2\")[0],\r\n      clientId,\r\n      redirectUri,\r\n      logo: \"/react.svg\",\r\n      i18n: {\r\n        en: {\r\n          \"primaryauth.title\": \"Sign in to React & Company\",\r\n        },\r\n      },\r\n      authParams: {\r\n        pkce,\r\n        issuer,\r\n        display: \"page\",\r\n        responseMode: pkce ? \"query\" : \"fragment\",\r\n        scopes,\r\n      },\r\n    });\r\n\r\n    widget.renderEl(\r\n      { el: \"#sign-in-widget\" },\r\n      () => {\r\n        /**\r\n         * In this flow, the success handler will not be called beacuse we redirect\r\n         * to the Okta org for the authentication workflow.\r\n         */\r\n      },\r\n      (err) => {\r\n        throw err;\r\n      }\r\n    ); return ()=>{widget.remove()}\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"sign-in-widget\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\n\r\nconst Banner = () => {\r\n  return (\r\n    <div className=\"banner\">\r\n      <div className=\"container\">\r\n        <h1 className=\"logo-font\">Jokes ...... </h1>\r\n        <p>A place to start your day.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import firebase from \"firebase\";\r\nconst config = {\r\n  apiKey: \"AIzaSyBhFoXG47xjz4rhX7t9N805rvl5lXmBBis\",\r\n  authDomain: \"jokes-95bd0.firebaseapp.com\",\r\n  databaseURL: \"https://jokes-95bd0.firebaseio.com\",\r\n  projectId: \"jokes-95bd0\",\r\n  storageBucket: \"jokes-95bd0.appspot.com\",\r\n  messagingSenderId: \"851183822439\",\r\n  appId: \"1:851183822439:web:f7a68f074b814108b556c2\",\r\n  measurementId: \"G-KQCHBK12GD\",\r\n};\r\nfirebase.initializeApp(config);\r\nexport default firebase;\r\n","import axios from \"axios\";\r\nimport firebase from \"../firebaseConfig\";\r\n\r\nconst url = \"https://localhost:5001\";\r\n\r\nfunction dispatchPostResponse(data) {\r\n  return {\r\n    type: \"FETCH_SUCCESS\",\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport const FetchFeed = (callBack) => (dispatch) => {\r\n  let data = [];\r\n  const itemsRef = firebase.database().ref(\"value\");\r\n  itemsRef.on(\"value\", (snapshot) => {\r\n    data = snapshot.val();\r\n    var res = dispatchPostResponse(data);\r\n  return dispatch(res);\r\n  });\r\n  console.log(\"da\",data)\r\n  \r\n};\r\n","import React from \"react\";\r\n\r\nconst Feeds = ({ jokes }) => {\r\n  const html = [];\r\n\r\n  jokes.slice(0, 10).forEach((j) => {\r\n    const random = Math.floor(Math.random() * jokes.length);\r\n    const joke = jokes[random];\r\n    html.push(\r\n      <div className=\"feed_container\">\r\n        <p>{joke[\"joke\"]}</p>\r\n      </div>\r\n    );\r\n  });\r\n  return <div className=\"feeds_Container\">{html}</div>;\r\n};\r\n\r\nexport default Feeds;\r\n","import React, { Component } from \"react\";\r\nimport Banner from \"./Banner\";\r\nimport { FetchFeed } from \"../../actions/Feed\";\r\nimport { ShowAddExpSection } from \"../../actions/AddExp\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomizedDialogs from \"../Modal\";\r\nimport Loader from \"../Loader\";\r\nimport { withRouter } from \"react-router\";\r\nimport Feeds from \"../Feeds\";\r\nimport DialogBox from \"../DialogBox\";\r\nimport firebase from \"../../firebaseConfig\";\r\nclass Home extends Component {\r\n  state = {\r\n    showLoading: true,\r\n    jokes: null,\r\n  };\r\n  componentDidMount() {\r\n    this.props.FetchFeed(() => console.log(\"d\"));\r\n  }\r\n\r\n  render() {\r\n    const handleAddComment = (text) => {\r\n      alert(text);\r\n    };\r\n    const handleAddExpButton = (text) => {\r\n      this.props.ShowAddExpSection(text);\r\n    };\r\n    let error = this.props.feedInfo.failure ? (\r\n      <CustomizedDialogs\r\n        title=\"Error\"\r\n        message={this.props.feedInfo.error}\r\n        initialState={true}\r\n      />\r\n    ) : (\r\n      \"\"\r\n    );\r\n    return (\r\n      <div className=\"home_Container\">\r\n        {!this.props.feedInfo.feed && <Loader showLoading={true}/>}\r\n        <Banner />\r\n        {error}\r\n        {console.log(\"fe\", this.props.feedInfo)}\r\n        {this.props.feedInfo.feed && <Feeds jokes={this.props.feedInfo.feed} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  feedInfo: state.Feed,\r\n  showCommentBox: state.ExpReducer.showCommentBox,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { FetchFeed, ShowAddExpSection })(Home)\r\n);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst loginerr = ()=>{\r\n\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst FormDialog = withStyles(styles)(({ initialState, handleAddComment,classes, OnClose,props }) => {\r\n  const [open, setOpen] = React.useState(initialState);\r\n  const [exptext, setText] = React.useState(\"\");\r\n  \r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    OnClose(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add Experience</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            id=\"outlined-multiline-static\"\r\n            multiline\r\n            rows={20}\r\n            defaultValue=\"Default Value\"\r\n            variant=\"outlined\"\r\n            value={exptext}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleAddComment(exptext)} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default FormDialog;\r\n","export const ShowAddExpSection = (show)=>({\r\n    type :\"SHOW_ADD_EXP_SECTION\",\r\n    payload:show\r\n});\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useOktaAuth } from \"@okta/okta-react\";\r\nimport Loader from \"../Loader\";\r\n\r\nconst Profile = () => {\r\n  const { authState, authService } = useOktaAuth();\r\n  const [userInfo, setUserInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!authState.isAuthenticated) {\r\n      // When user isn't authenticated, forget any user info\r\n      setUserInfo(null);\r\n    } else {\r\n      authService.getUser().then((info) => {\r\n        setUserInfo(info);\r\n      });\r\n    }\r\n  }, [authState, authService]); // Update if authState changes\r\n\r\n  if (!userInfo) {\r\n    return (\r\n      <div>\r\n        <Loader showLoading={true} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-6 offset-md-3 col-xs-12\">\r\n            <h2 className=\"text-xs-center\">Profile</h2>\r\n    <form>\r\n      <div className=\"pro_Container\">\r\n        <div>\r\n          <div className=\"label\">User Name :</div>\r\n          <div>{userInfo[\"name\"]}</div>\r\n        </div>\r\n        <div>\r\n          <div className=\"label\">Email Address :</div>\r\n          <div>{userInfo[\"email\"]}</div>\r\n        </div>\r\n        <div>\r\n          <div className=\"label\">First Name :</div>\r\n          <div>{userInfo[\"given_name\"]}</div>\r\n        </div>\r\n        <div>\r\n          <div className=\"label\">Last Name :</div>\r\n          <div>{userInfo[\"family_name\"]}</div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://localhost:5001\";\r\n\r\nfunction dispatchPostResponse(response) {\r\n  return {\r\n    type: \"LOGIN_USER\",\r\n    token: response.token,\r\n    email: response.email,\r\n    error: response.error,\r\n  };\r\n}\r\n\r\nexport const ClearLoginError = () => ({\r\n  type: \"CLEAR_LOGIN_ERROR\",\r\n});\r\n\r\nexport const Logout = () => ({\r\n  type: \"LOGOUT\",\r\n});\r\n\r\nexport const LoginUser = (email, password, callBack) => (dispatch) => {\r\n  dispatch({\r\n    type: \"CLEAR_ERROR\",\r\n  });\r\n  axios\r\n    .post(url + \"/api/Login\", { email, password })\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        callBack(response.data.token ? true : false);\r\n\r\n        return dispatch(dispatchPostResponse(response.data));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"n/W error\",error);\r\n      callBack(false);\r\n      dispatch({\r\n        type: \"HTTP_ERROR\",\r\n        payload:\r\n          \"Sorry 😞 Error occured while processing your request .Please try again after some time .\",\r\n      });\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useOktaAuth } from \"@okta/okta-react\";\r\nimport Loader from \"../Loader\";\r\nconst LoggedInView = ({ email, currentUser, onLogutClick }) => (\r\n  <ul className=\"nav navbar-nav pull-xs-right\" style={{ flexDirection: \"row\" }}>\r\n    <li className=\"nav-item home_nav\">\r\n      <Link to=\"/react-day-experience-app\" className=\"nav-link\">\r\n        Home\r\n      </Link>\r\n    </li>\r\n    <li className=\"nav-item\">\r\n      <Link to=\"/profile\" className=\"nav-link\">\r\n        Profile\r\n      </Link>\r\n    </li>\r\n    <li className=\"nav-item\">\r\n      <Link onClick={onLogutClick} className=\"nav-link\">\r\n        Log Out\r\n      </Link>\r\n    </li>\r\n  </ul>\r\n);\r\nconst LoggedOutView = () => (\r\n  <ul className=\"nav navbar-nav pull-xs-right\" style={{ flexDirection: \"row\" }}>\r\n    <li className=\"nav-item\">\r\n      <Link to=\"/react-day-experience-app\" className=\"nav-link\">\r\n        Home\r\n      </Link>\r\n    </li>\r\n\r\n    <li className=\"nav-item\">\r\n      <Link to=\"/login\" className=\"nav-link\">\r\n        Sign in\r\n      </Link>\r\n    </li>\r\n\r\n    <li className=\"nav-item\">\r\n      <Link to=\"/register\" className=\"nav-link\">\r\n        Sign up\r\n      </Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst Nav = (props) => {\r\n  const history = useHistory();\r\n  const logout = async () => {\r\n    authService.logout(\"/login\");\r\n\r\n    // history.push(\"/login\");\r\n  };\r\n  const { authState, authService } = useOktaAuth();\r\n  const [userInfo, setUserInfo] = React.useState(null);\r\n  const [isAuthenticated, SetAuthentication] = React.useState(false);\r\n  React.useEffect(() => {\r\n    if (!authState.isAuthenticated) {\r\n      // When user isn't authenticated, forget any user info\r\n      SetAuthentication(false);\r\n      setUserInfo(null);\r\n    } else {\r\n      SetAuthentication(true);\r\n      authService.getUser().then((info) => {\r\n        setUserInfo(info);\r\n      });\r\n    }\r\n  }, [authState, authService]);\r\n  return (\r\n    <nav className=\"navbar navbar-light\">\r\n      <div className=\"container\">\r\n        <Link to=\"/react-day-experience-app\" className=\"navbar-brand\">\r\n          Jokes For the Day\r\n        </Link>\r\n        {isAuthenticated && userInfo ? (\r\n          <LoggedInView onLogutClick={logout} />\r\n        ) : (\r\n          <LoggedOutView />\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Register from \"../src/components/Register/Register\";\nimport Login from \"../src/components/Login/Login\";\nimport Home from \"../src/components/Home/Home\";\nimport Profile from \"../src/components/Profile/Profile\";\nimport { Logout } from \"../src/actions/Login/action\";\nimport { withRouter } from \"react-router\";\nimport Nav from \"../src/components/Nav/Nav\";\nimport { connect } from \"react-redux\";\nimport config from \"./Config\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport { Security, SecureRoute, LoginCallback } from \"@okta/okta-react\";\n\nfunction App(props) {\n  const history = useHistory();\n\n  const customAuthHandler = () => {\n    history.push(\"/login\");\n  };\n  return (\n    <Security {...config.oidc} onAuthRequired={customAuthHandler}>\n      <Nav\n        currentUser={props.currentUser}\n        email={props.email}\n        onLogutClick={() => props.Logout()}\n      />\n      <Switch>\n      <Route path=\"/\" exact component={Home} />\n        <Route path=\"/react-day-experience-app\" exact component={Home} />\n        <Route\n          path=\"/register\"\n          component={props.currentUser ? Home : Register}\n        />\n        <Route path=\"/login\" component={props.currentUser ? Home : Login} />\n        <Route path=\"/profile\" component={ Profile} />\n        <Route path=\"/callback\" component={LoginCallback} />\n      </Switch>\n    </Security>\n  );\n}\nconst mapStateToProps = (state) => ({\n  currentUser: state.LoginReducer.token,\n  email: state.LoginReducer.email,\n});\n\nexport default withRouter(connect(mapStateToProps, { Logout })(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n  showErrorModal: false,\r\n  errorMessage: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"HTTP_ERROR\":\r\n      return { ...state, showErrorModal: true, errorMessage: action.payload };\r\n      case \"CLEAR_ERROR\":\r\n        return { ...state, showErrorModal: false, errorMessage: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n    registrationSuccess : false\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    switch (action.type) {\r\n      case \"REGISTER_SUCCESS\":\r\n        return { ...state, registrationSuccess: true };\r\n        \r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","const initialState = {\r\n  token: null,\r\n  error: null,\r\n  email:null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n     \r\n    case \"LOGIN_USER\":\r\n      return { ...state, token: action.token, email : action.email,error: action.error };\r\n    case \"CLEAR_LOGIN_ERROR\":\r\n        return { ...state, token: null,email:null, error: null };\r\n        case \"LOGOUT\":\r\n          return { ...state, token: null,email:null, error: null };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n    showCommentBox: false,\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    switch (action.type) {\r\n      case \"SHOW_ADD_EXP_SECTION\":\r\n        return { ...state, showCommentBox: action.payload};\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","const initialState = {\r\n    feed : null,\r\n    error:null,\r\n    failure: false\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    switch (action.type) {\r\n      case \"FETCH_SUCCESS\":\r\n        return { ...state, feed: action.payload,failure:false };\r\n        case \"FETCH_FAILURE\":\r\n        return { ...state, failure : true, error: action.payload };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import ErrorReducer from './ErrorReducer';\r\nimport RegistrationReducer from './RegisterReducer';\r\nimport LoginReducer from './LoginReducer';\r\nimport ExpReducer from './AddExpReducer';\r\nimport Feed from './FeedReducer';\r\nimport {  combineReducers } from 'redux';\r\n\r\nexport default combineReducers({\r\n    errorHandler: ErrorReducer,\r\n    registrationSuccess : RegistrationReducer,\r\n    Feed,\r\n    LoginReducer,\r\n    ExpReducer\r\n})","import reducers from './index';\r\nimport { compose, createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\n\r\n\r\nexport default initialState => {\r\n  initialState =\r\n    JSON.parse(window.localStorage.getItem('state')) || initialState;\r\n  const middleware = [thunk];\r\n  const composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n    const enhancer = composeEnhancers(\r\n      applyMiddleware(...middleware),\r\n      // other store enhancers if any\r\n    );\r\n\r\n\r\n\r\n  const store = createStore(\r\n    reducers,\r\n    initialState,\r\n    enhancer\r\n  );\r\n\r\n  store.subscribe(() => {\r\n    const state = store.getState();\r\n    const persist = {\r\n      LoginReducer: state.LoginReducer,\r\n    };\r\n\r\n    window.localStorage.setItem('state', JSON.stringify(persist));\r\n  });\r\n\r\n  return store;\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from  '../src/reducers/store';\r\n\r\nconst Root = ({ children, initialState = {} }) => (\r\n  <Provider store={store(initialState)}>{children}</Provider>\r\n);\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter ,Route, Switch} from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport Root from './Root';\r\nimport store from '../src/reducers/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    <Root>\r\n    <App />\r\n    </Root>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}